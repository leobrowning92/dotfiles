#start by setting up a 32 bit arch install on a virtual box
ping google.com #to check internet connection
timedatectl set-ntp true
parted /dev/sda
(parted) mklabel msdos
(parted) mkpart primary ext4 0% 100%
(parted) set 1 boot on
(parted) quit
mkfs.ext4 /dev/sda1
mount /dev/sda1 /mnt
pacstrap /mnt base
genfstab -U /mnt >> /mnt/etc/fstab
arch-chroot /mnt

pacman -S grub sudo
EDITOR=nano visudo
# and uncomment %wheel ALL=(ALL) ALL
grub-install --target=i386-pc /dev/sda
grub-mkconfig -o /boot/grub/grub.cfg

rm /etc/localtime #this step is not in the guide, but localtime seems corrupted so need to rm in first
ln -s /usr/share/zoneinfo/Pacific/Auckland /etc/localtime
hwclock --systohc
nano /etc/locale.gen
# then uncomment the two lines nz_US.UTF-8 UTF-8 and en_US.UTF-8 UTF-8
locale-gen
nano /etc/locale.conf # then type LANG=en_US.UTF-8 on the first line
nano /etc/hostname # type the computer name in the firstexit line
passwd #sets passwd for root
exit #exits chroot and goes to root
reboot

#login as root
ip link # to find the name of the ethernet device
systemctl start dhcpcd@enp0s3.service
systemctl enable dhcpcd@enp0s3.service
useradd -m -G wheel,users -s /bin/bash leo
passwd leo #then add a password to that user



#at this point we have a working arch install, but with nothing on it yet.
#login as leo
sudo pacman -Syu
pacman -S bash-completion git tldr tree base-devel



# option using https://arcolinuxd.com/7-the-actual-installation-of-arch-linux-phase-3
sudo pacman -S xorg-server xorg-apps xorg-xinit xterm
startx
# check that a session starts type exit to get out.
# install a display manager. we choose lightdm
sudo pacman -S lightdm{,-gtk-greeter,-gtk-greeter-settings}

# get yaourt https://arcolinuxd.com/6-the-actual-installation-of-arch-linux-phase-2/
nano /etc/pacman.conf
# add the following lines:
[arcolinux_repo_iso]
SigLevel = Never
Server = https://arcolinux.github.io/arcolinux_repo_iso/$arch
#run:
pacman -Sy
pacman -S yaourt package-query
#then remove the lines from /etc/pacman.conf










#when installing the virtualbox-guest-utils there is an option ofr available providers. select 2), which
#is the virtualbox-guest-modules-arch
sudo pacman -S xorg-{server,apps,xinit,twm,xclock} xterm virtualbox-guest-utils
cp /etc/X11/xinit/xinitrc ~/.xinitrc
chmod +x .xinitrc
sudo pacman -S xf86-video-vesa #video driver needed to startx

sudo pacman -S xfce4
#edit .xinitrc so that the executed line reads "exec startxfce4"
#use startx to start xfce4 graphical interface

sudo pacman -S  numix-gtk-theme atom midori

git clone https://github.com/leobrowning92.dotfiles.git
#then run the atom install script to get packages from apm
#as well as the git configurations (maybe gitconfig later)


#install numix-icon-theme-git numix-circle-icon-theme-git neofetch-git from aur
#put aur packages in a seperate directory
git clone https://aur.archlinux.org/numix-icon-theme-git.git
git clone https://aur.archlinux.org/numix-circle-icon-theme-git.git
git clone https://aur.archlinux.org/neofetch.git
#using the AUR and makepkg -sri in directory to install
#then set them to be used in the system settings



#installs basic python packages and cairo
sudo pacman -S python
sudo pacman -S python-{numpy,matplotlib,scipy} #basic packages
sudo pacman -S python-{gobject,cairo} #packages for generative art
#installs ipython and the jupyter notebook
sudo pacman -S jupyter{,-notebook}

#for git repo information in bash prompt
cp /usr/share/git/completion/git-prompt.sh .git-prompt.sh
#and source this with `. ~/.git-prompt.sh` in .bashrc
#in the prompt then use $(__git_ps1 " (%s)") to get the prompt
